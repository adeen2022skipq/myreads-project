{"version":3,"sources":["components/Book.js","components/Shelf.js","components/Shelves.js","components/Search.js","components/SearchButton.js","components/Header.js","BooksAPI.js","App.js","index.js"],"names":["Book","book","changeShelf","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","shelf","onChange","e","target","disabled","title","authors","Shelf","books","map","id","Shelves","allBooks","currentlyReading","filter","wantToRead","read","Search","query","searchQuery","searchedBooks","to","type","placeholder","SearchButton","Header","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","App","useState","setBooks","setSearchedBooks","mergedBooks","setMergedBooks","Map","mapOfIdToBooks","setMapOfIdToBooks","setQuery","changeBookShelf","updatedBooks","b","has","push","fetch","method","body","JSON","stringify","then","res","json","BooksAPI","createMapOfBooks","set","useEffect","a","data","getBooks","isActive","maxResults","error","merged","get","path","element","q","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea18a8b5.chunk.js","sourcesContent":["const Book = ({ book, changeShelf }) => {\n    return (\n        <div className=\"book\">\n            <div className=\"book-top\">\n                <div\n                className=\"book-cover\"\n                style={{\n                    width: 128,\n                    height: 193,\n                    backgroundImage:\n                    `url(${book.imageLinks.thumbnail})`,\n                }}\n                ></div>\n                <div className=\"book-shelf-changer\">\n                <select value={book.shelf ? book.shelf : \"none\"} onChange={ e => changeShelf(book, e.target.value)}>\n                    <option value=\"move\" disabled>\n                    Move to...\n                    </option>\n                    <option value=\"currentlyReading\">\n                    Currently Reading\n                    </option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n                </div>\n            </div>\n            <div className=\"book-title\">{book.title}</div>\n            <div className=\"book-authors\">{book.authors}</div>\n            </div>\n    );\n};\n\nexport default Book;","import Book from \"./Book\";\n\nconst Shelf = ({ books, title, changeShelf }) => {\n    return (\n        <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{title}</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {books.map( book => (\n                         <li key={book.id}>\n                            <Book book={book} changeShelf={changeShelf} />\n                       </li>\n\n                    ))}\n                   \n                  </ol>\n                </div>\n              </div>\n    );\n};\n\nexport default Shelf;","import Shelf from \"./Shelf\";\n\nconst Shelves = ({ allBooks, changeShelf }) => {\n\n    const currentlyReading = allBooks.filter( book => book.shelf === \"currentlyReading\");\n    const wantToRead = allBooks.filter( book => book.shelf === \"wantToRead\");\n    const read = allBooks.filter( book => book.shelf === \"read\");\n    \n    return (\n        <div className=\"list-books-content\">\n            <div>\n              <Shelf books={currentlyReading} title={\"Currently Reading\"} changeShelf={changeShelf} />\n              <Shelf books={wantToRead} title={\"Want To Read\"} changeShelf={changeShelf} />\n              <Shelf books={read} title={\"Read\"} changeShelf={changeShelf} />\n            </div>\n          </div>\n    );\n};\n\nexport default Shelves;","import { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\n\nconst Search = ({ query, searchQuery, searchedBooks, changeShelf }) => {\n    return (\n        <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n            <Link to=\"/\">\n          <a\n            className=\"close-search\"\n          >\n            Close\n          </a>\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title, author, or ISBN\" value={query} onChange={(e) => searchQuery(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {searchedBooks.map( book => (\n                         <li key={book.id}>\n                            <Book book={book} changeShelf={changeShelf} />\n                       </li>\n\n                    ))}\n          </ol>\n        </div>\n      </div>\n    );\n};\n\nexport default Search;","const SearchButton = () => {\n    return (\n        <div className=\"open-search\">\n            <a >Add a book</a>\n          </div>\n    );\n};\n\nexport default SearchButton;","const Header = () => {\n    return (\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n    );\n};\n\nexport default Header;","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Shelves from \"./components/Shelves\";\nimport Search from \"./components/Search\";\nimport SearchButton from \"./components/SearchButton\";\nimport Header from \"./components/Header\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nfunction App() {\n\n  const [books, setBooks] = useState([]);\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  const [mergedBooks, setMergedBooks] = useState([]);\n\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n\n  const [query, setQuery] = useState(\"\");\n\n  const searchQuery = (q) => {\n    setQuery(q);\n  }\n\n  const changeBookShelf = (book, shelf) => {\n    const updatedBooks = books.map(b => {\n      if (b.id === book.id) {\n        book.shelf = shelf;\n        return book;\n      }\n      return b;\n    });\n    if (!mapOfIdToBooks.has(book.id)){\n      book.shelf = shelf;\n      updatedBooks.push(book);\n    }\n    BooksAPI.update(book, shelf);\n    setBooks(updatedBooks);\n  };\n\n  const createMapOfBooks = (books) => {\n    const map = new Map();\n    books.map(book => map.set(book.id, book));\n    return map;\n  };\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n      setMapOfIdToBooks(createMapOfBooks(res));\n    };\n\n    getBooks();\n  }, []);\n\n  useEffect(() => {\n\n    let isActive = true;\n\n    if (query) {\n      BooksAPI.search(query).then(data => {\n        if (data.error) {\n          setSearchedBooks([]);\n        } else {\n          if (isActive) {\n            setSearchedBooks(data);\n          }\n        }\n      })\n    }\n\n    return () => {\n      isActive = false;\n      setSearchedBooks([]);\n    }\n\n  }, [query]);\n\n  useEffect(() => {\n    const merged = searchedBooks.map(book => {\n      if (mapOfIdToBooks.has(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      }\n      else {\n        return book;\n      }\n    });\n    setMergedBooks(merged);\n  }, [searchedBooks]);\n\n  return (\n    <div className=\"app\">\n      <Routes>\n          <Route path=\"/search\" element={\n          <Search query={query} searchQuery={searchQuery} searchedBooks={mergedBooks} changeShelf={changeBookShelf} />\n          }\n          />\n            \n          <Route exact path=\"/\" element={\n          <div className=\"list-books\">\n              <Header />\n              <Shelves allBooks={books} changeShelf={changeBookShelf} />\n              <Link to=\"/search\">\n              <SearchButton />\n              </Link>\n            </div>\n          } \n          />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}